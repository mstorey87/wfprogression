% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_gg_map.R
\name{fire_gg_map}
\alias{fire_gg_map}
\title{Create a ggplot map with an image and/or polygon overlay}
\usage{
fire_gg_map(image = NULL, prog = NULL, agg = 5)
}
\arguments{
\item{image}{A \code{terra::rast()} raster object. Should contain RGB bands named \code{red}, \code{green}, and \code{blue}.}

\item{prog}{An \code{sf} polygons object to overlay. Optional.}

\item{agg}{Integer aggregation factor passed to \code{terra::aggregate()} to downsample the raster for faster plotting.}
}
\value{
A \code{ggplot2} plot object.
}
\description{
Generates a quick map for visualising spatial data.
This function takes a \code{terra::rast()} raster image (such as an RGB image) and plots it using the \code{terrainr} package for RGB display.
To make plotting faster, the raster is aggregated with \code{terra::aggregate()} before plotting.
If a polygon (\code{sf} object) is also provided, it will be reprojected to match the image CRS (if needed) and overlaid on top.
If the polygon has a \code{firetype} column, it will colour polygons by \code{firetype} using a predefined palette.

This is an internal helper for quick visual checks.
}
\examples{
# Example (not run):
# library(terra)
# library(sf)
# library(ggplot2)
#
# Example raster with RGB bands
# image <- rast(system.file("extdata/raster.tif", package = "terra"))
#
# Example polygon
# prog <- st_read(system.file("extdata/polygon.shp", package = "sf"))
#
# g <- fire_gg_map(image = image, prog = prog, agg = 5)
# print(g)
}
